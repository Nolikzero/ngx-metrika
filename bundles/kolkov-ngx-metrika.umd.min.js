!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/router"),require("rxjs/operators"),require("rxjs/internal/BehaviorSubject"),require("@angular/common")):"function"==typeof define&&define.amd?define("@kolkov/ngx-metrika",["exports","@angular/core","@angular/router","rxjs/operators","rxjs/internal/BehaviorSubject","@angular/common"],t):t(((e=e||self).kolkov=e.kolkov||{},e.kolkov["ngx-metrika"]={}),e.ng.core,e.ng.router,e.rxjs.operators,e.rxjs["internal/BehaviorSubject"],e.ng.common)}(this,function(e,t,r,n,o,i){"use strict";var a=function(){return(a=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},c=new t.InjectionToken("ngx-metrika Config"),u=function(){function e(e,r,n,i){this.router=r,this.document=i,this.defaultConfig={id:0,triggerEvent:!0,trackPageViews:!0},this.debug=!1,this.hit=new t.EventEmitter,this.reachGoal=new o.BehaviorSubject({target:"test"}),this.renderer=n.createRenderer(null,null),e&&e.id&&this.configure(e)}return e.getCounterNameById=function(e){return"yaCounter"+e},e.getCounterById=function(t){return window[e.getCounterNameById(t)]},e.prototype.configure=function(e){var t=this;e=Object.assign({},this.defaultConfig,e),this.config=e,this.insertMetrika(e),this.checkCounter(e.id).then(function(){t.hit.subscribe(function(e){t.onHit(t.router.url,e.hitOptions)}),t.reachGoal.subscribe(function(e){t.onReachGoal(e.target,e.options)})}),e.trackPageViews&&this.router.events.pipe(n.filter(function(e){return e instanceof r.NavigationEnd}),n.tap(function(){var e={url:t.router.url};t.hit.emit(e),t.previousUrl=t.router.url})).subscribe()},e.prototype.onHit=function(t,r){try{var n={referer:this.previousUrl};this.debug&&console.log("Hit:",t,n,r);var o=e.getCounterById(this.config.id);if(void 0!==o){var i=Object.assign(n,r);this.debug&&console.log("Hit:",t,i),o.hit(t,i)}}catch(a){console.error("Yandex Metrika hit error",a)}},e.prototype.onReachGoal=function(t,r){void 0===r&&(r={});try{var n=e.getCounterById(this.config.id);void 0!==n&&(this.debug&&console.log("onReachGoal:",t,r),n.reachGoal(t,r.params,r.callback,r.ctx))}catch(o){console.error("error",o),console.warn("'Event with type ["+t+"] can't be fired because counter is still loading'")}},e.prototype.insertMetrika=function(t){var r="yandex_metrika_callbacks2";window[r]=window[r]||[],window[r].push(function(){try{var r=e.getCounterNameById(t.id);window[r]=new Ya.Metrika2(t)}catch(n){}});var n=this.document.getElementsByTagName("head")[0],o=document.createElement("script");o.type="text/javascript",o.async=!0,o.src="https://mc.yandex.ru/metrika/tag.js";var i=function(){return n.appendChild(o)};return"[object Opera]"===window.opera?this.document.addEventListener("DOMContentLoaded",i,!1):i(),r},e.prototype.checkCounter=function(e){var t=this;return new Promise(function(r){var n="yacounter"+e+"inited";t.renderer.listen("document",n,function(){r({})})})},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:t.Inject,args:[c]}]},{type:r.Router},{type:t.RendererFactory2},{type:Document,decorators:[{type:t.Inject,args:[i.DOCUMENT]}]}]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e(t.inject(c),t.inject(r.Router),t.inject(t.RendererFactory2),t.inject(i.DOCUMENT))},token:e,providedIn:"root"}),e}(),s=function(){function e(e,t,r){this.ym=e,this.renderer=t,this.el=r}return e.prototype.ngAfterViewInit=function(){var e=this;try{this.renderer.listen(this.el.nativeElement,this.trackOn,function(){var t={target:e.target||e.trackOn,options:a({callback:e.callback},e.params)};e.ym.reachGoal.next(t)})}catch(t){console.error(t)}},e.decorators=[{type:t.Directive,args:[{selector:"[ymGoal]"}]}],e.ctorParameters=function(){return[{type:u},{type:t.Renderer2},{type:t.ElementRef}]},e.propDecorators={trackOn:[{type:t.Input}],target:[{type:t.Input}],params:[{type:t.Input}],callback:[{type:t.Input}]},e}(),l=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[u,{provide:c,useValue:t}]}},e.decorators=[{type:t.NgModule,args:[{declarations:[s],exports:[s],imports:[]}]}],e}();e.NgxMetrikaGoalDirective=s,e.NgxMetrikaModule=l,e.NgxMetrikaService=u,e.YM_CONFIG=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=kolkov-ngx-metrika.umd.min.js.map
